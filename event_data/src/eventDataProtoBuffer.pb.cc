// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: eventDataProtoBuffer.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "eventDataProtoBuffer.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* ProtobufEventData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ProtobufEventData_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_eventDataProtoBuffer_2eproto() {
  protobuf_AddDesc_eventDataProtoBuffer_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "eventDataProtoBuffer.proto");
  GOOGLE_CHECK(file != NULL);
  ProtobufEventData_descriptor_ = file->message_type(0);
  static const int ProtobufEventData_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtobufEventData, count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtobufEventData, detid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtobufEventData, tof_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtobufEventData, framenumber_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtobufEventData, totalframes_),
  };
  ProtobufEventData_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ProtobufEventData_descriptor_,
      ProtobufEventData::default_instance_,
      ProtobufEventData_offsets_,
      -1,
      -1,
      -1,
      sizeof(ProtobufEventData),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtobufEventData, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtobufEventData, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_eventDataProtoBuffer_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ProtobufEventData_descriptor_, &ProtobufEventData::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_eventDataProtoBuffer_2eproto() {
  delete ProtobufEventData::default_instance_;
  delete ProtobufEventData_reflection_;
}

void protobuf_AddDesc_eventDataProtoBuffer_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\032eventDataProtoBuffer.proto\"h\n\021Protobuf"
    "EventData\022\r\n\005count\030\001 \001(\005\022\r\n\005detId\030\002 \003(\005\022"
    "\013\n\003tof\030\003 \003(\003\022\023\n\013frameNumber\030\004 \001(\005\022\023\n\013tot"
    "alFrames\030\005 \001(\005b\006proto3", 142);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "eventDataProtoBuffer.proto", &protobuf_RegisterTypes);
  ProtobufEventData::default_instance_ = new ProtobufEventData();
  ProtobufEventData::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_eventDataProtoBuffer_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_eventDataProtoBuffer_2eproto {
  StaticDescriptorInitializer_eventDataProtoBuffer_2eproto() {
    protobuf_AddDesc_eventDataProtoBuffer_2eproto();
  }
} static_descriptor_initializer_eventDataProtoBuffer_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProtobufEventData::kCountFieldNumber;
const int ProtobufEventData::kDetIdFieldNumber;
const int ProtobufEventData::kTofFieldNumber;
const int ProtobufEventData::kFrameNumberFieldNumber;
const int ProtobufEventData::kTotalFramesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProtobufEventData::ProtobufEventData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtobufEventData)
}

void ProtobufEventData::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

ProtobufEventData::ProtobufEventData(const ProtobufEventData& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtobufEventData)
}

void ProtobufEventData::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  count_ = 0;
  framenumber_ = 0;
  totalframes_ = 0;
}

ProtobufEventData::~ProtobufEventData() {
  // @@protoc_insertion_point(destructor:ProtobufEventData)
  SharedDtor();
}

void ProtobufEventData::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ProtobufEventData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProtobufEventData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ProtobufEventData_descriptor_;
}

const ProtobufEventData& ProtobufEventData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_eventDataProtoBuffer_2eproto();
  return *default_instance_;
}

ProtobufEventData* ProtobufEventData::default_instance_ = NULL;

ProtobufEventData* ProtobufEventData::New(::google::protobuf::Arena* arena) const {
  ProtobufEventData* n = new ProtobufEventData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ProtobufEventData::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ProtobufEventData*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(count_, framenumber_);
  totalframes_ = 0;

#undef ZR_HELPER_
#undef ZR_

  detid_.Clear();
  tof_.Clear();
}

bool ProtobufEventData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtobufEventData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 count = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &count_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_detId;
        break;
      }

      // repeated int32 detId = 2;
      case 2: {
        if (tag == 18) {
         parse_detId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_detid())));
        } else if (tag == 16) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 18, input, this->mutable_detid())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_tof;
        break;
      }

      // repeated int64 tof = 3;
      case 3: {
        if (tag == 26) {
         parse_tof:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_tof())));
        } else if (tag == 24) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 26, input, this->mutable_tof())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_frameNumber;
        break;
      }

      // optional int32 frameNumber = 4;
      case 4: {
        if (tag == 32) {
         parse_frameNumber:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &framenumber_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_totalFrames;
        break;
      }

      // optional int32 totalFrames = 5;
      case 5: {
        if (tag == 40) {
         parse_totalFrames:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &totalframes_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtobufEventData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtobufEventData)
  return false;
#undef DO_
}

void ProtobufEventData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtobufEventData)
  // optional int32 count = 1;
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->count(), output);
  }

  // repeated int32 detId = 2;
  if (this->detid_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_detid_cached_byte_size_);
  }
  for (int i = 0; i < this->detid_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->detid(i), output);
  }

  // repeated int64 tof = 3;
  if (this->tof_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_tof_cached_byte_size_);
  }
  for (int i = 0; i < this->tof_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->tof(i), output);
  }

  // optional int32 frameNumber = 4;
  if (this->framenumber() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->framenumber(), output);
  }

  // optional int32 totalFrames = 5;
  if (this->totalframes() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->totalframes(), output);
  }

  // @@protoc_insertion_point(serialize_end:ProtobufEventData)
}

::google::protobuf::uint8* ProtobufEventData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtobufEventData)
  // optional int32 count = 1;
  if (this->count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->count(), target);
  }

  // repeated int32 detId = 2;
  if (this->detid_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _detid_cached_byte_size_, target);
  }
  for (int i = 0; i < this->detid_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->detid(i), target);
  }

  // repeated int64 tof = 3;
  if (this->tof_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _tof_cached_byte_size_, target);
  }
  for (int i = 0; i < this->tof_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->tof(i), target);
  }

  // optional int32 frameNumber = 4;
  if (this->framenumber() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->framenumber(), target);
  }

  // optional int32 totalFrames = 5;
  if (this->totalframes() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->totalframes(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ProtobufEventData)
  return target;
}

int ProtobufEventData::ByteSize() const {
  int total_size = 0;

  // optional int32 count = 1;
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->count());
  }

  // optional int32 frameNumber = 4;
  if (this->framenumber() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->framenumber());
  }

  // optional int32 totalFrames = 5;
  if (this->totalframes() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->totalframes());
  }

  // repeated int32 detId = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->detid_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->detid(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _detid_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int64 tof = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->tof_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->tof(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _tof_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProtobufEventData::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ProtobufEventData* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ProtobufEventData>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ProtobufEventData::MergeFrom(const ProtobufEventData& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  detid_.MergeFrom(from.detid_);
  tof_.MergeFrom(from.tof_);
  if (from.count() != 0) {
    set_count(from.count());
  }
  if (from.framenumber() != 0) {
    set_framenumber(from.framenumber());
  }
  if (from.totalframes() != 0) {
    set_totalframes(from.totalframes());
  }
}

void ProtobufEventData::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtobufEventData::CopyFrom(const ProtobufEventData& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtobufEventData::IsInitialized() const {

  return true;
}

void ProtobufEventData::Swap(ProtobufEventData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProtobufEventData::InternalSwap(ProtobufEventData* other) {
  std::swap(count_, other->count_);
  detid_.UnsafeArenaSwap(&other->detid_);
  tof_.UnsafeArenaSwap(&other->tof_);
  std::swap(framenumber_, other->framenumber_);
  std::swap(totalframes_, other->totalframes_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ProtobufEventData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ProtobufEventData_descriptor_;
  metadata.reflection = ProtobufEventData_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ProtobufEventData

// optional int32 count = 1;
void ProtobufEventData::clear_count() {
  count_ = 0;
}
 ::google::protobuf::int32 ProtobufEventData::count() const {
  // @@protoc_insertion_point(field_get:ProtobufEventData.count)
  return count_;
}
 void ProtobufEventData::set_count(::google::protobuf::int32 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:ProtobufEventData.count)
}

// repeated int32 detId = 2;
int ProtobufEventData::detid_size() const {
  return detid_.size();
}
void ProtobufEventData::clear_detid() {
  detid_.Clear();
}
 ::google::protobuf::int32 ProtobufEventData::detid(int index) const {
  // @@protoc_insertion_point(field_get:ProtobufEventData.detId)
  return detid_.Get(index);
}
 void ProtobufEventData::set_detid(int index, ::google::protobuf::int32 value) {
  detid_.Set(index, value);
  // @@protoc_insertion_point(field_set:ProtobufEventData.detId)
}
 void ProtobufEventData::add_detid(::google::protobuf::int32 value) {
  detid_.Add(value);
  // @@protoc_insertion_point(field_add:ProtobufEventData.detId)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProtobufEventData::detid() const {
  // @@protoc_insertion_point(field_list:ProtobufEventData.detId)
  return detid_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProtobufEventData::mutable_detid() {
  // @@protoc_insertion_point(field_mutable_list:ProtobufEventData.detId)
  return &detid_;
}

// repeated int64 tof = 3;
int ProtobufEventData::tof_size() const {
  return tof_.size();
}
void ProtobufEventData::clear_tof() {
  tof_.Clear();
}
 ::google::protobuf::int64 ProtobufEventData::tof(int index) const {
  // @@protoc_insertion_point(field_get:ProtobufEventData.tof)
  return tof_.Get(index);
}
 void ProtobufEventData::set_tof(int index, ::google::protobuf::int64 value) {
  tof_.Set(index, value);
  // @@protoc_insertion_point(field_set:ProtobufEventData.tof)
}
 void ProtobufEventData::add_tof(::google::protobuf::int64 value) {
  tof_.Add(value);
  // @@protoc_insertion_point(field_add:ProtobufEventData.tof)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
ProtobufEventData::tof() const {
  // @@protoc_insertion_point(field_list:ProtobufEventData.tof)
  return tof_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
ProtobufEventData::mutable_tof() {
  // @@protoc_insertion_point(field_mutable_list:ProtobufEventData.tof)
  return &tof_;
}

// optional int32 frameNumber = 4;
void ProtobufEventData::clear_framenumber() {
  framenumber_ = 0;
}
 ::google::protobuf::int32 ProtobufEventData::framenumber() const {
  // @@protoc_insertion_point(field_get:ProtobufEventData.frameNumber)
  return framenumber_;
}
 void ProtobufEventData::set_framenumber(::google::protobuf::int32 value) {
  
  framenumber_ = value;
  // @@protoc_insertion_point(field_set:ProtobufEventData.frameNumber)
}

// optional int32 totalFrames = 5;
void ProtobufEventData::clear_totalframes() {
  totalframes_ = 0;
}
 ::google::protobuf::int32 ProtobufEventData::totalframes() const {
  // @@protoc_insertion_point(field_get:ProtobufEventData.totalFrames)
  return totalframes_;
}
 void ProtobufEventData::set_totalframes(::google::protobuf::int32 value) {
  
  totalframes_ = value;
  // @@protoc_insertion_point(field_set:ProtobufEventData.totalFrames)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
