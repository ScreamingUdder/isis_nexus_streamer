// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: eventDataProtoBuffer.proto

#ifndef PROTOBUF_eventDataProtoBuffer_2eproto__INCLUDED
#define PROTOBUF_eventDataProtoBuffer_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_eventDataProtoBuffer_2eproto();
void protobuf_AssignDesc_eventDataProtoBuffer_2eproto();
void protobuf_ShutdownFile_eventDataProtoBuffer_2eproto();

class ProtobufEventData;

// ===================================================================

class ProtobufEventData : public ::google::protobuf::Message {
 public:
  ProtobufEventData();
  virtual ~ProtobufEventData();

  ProtobufEventData(const ProtobufEventData& from);

  inline ProtobufEventData& operator=(const ProtobufEventData& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtobufEventData& default_instance();

  void Swap(ProtobufEventData* other);

  // implements Message ----------------------------------------------

  inline ProtobufEventData* New() const { return New(NULL); }

  ProtobufEventData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtobufEventData& from);
  void MergeFrom(const ProtobufEventData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ProtobufEventData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 count = 1;
  void clear_count();
  static const int kCountFieldNumber = 1;
  ::google::protobuf::int32 count() const;
  void set_count(::google::protobuf::int32 value);

  // repeated int32 detId = 2;
  int detid_size() const;
  void clear_detid();
  static const int kDetIdFieldNumber = 2;
  ::google::protobuf::int32 detid(int index) const;
  void set_detid(int index, ::google::protobuf::int32 value);
  void add_detid(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      detid() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_detid();

  // repeated int64 tof = 3;
  int tof_size() const;
  void clear_tof();
  static const int kTofFieldNumber = 3;
  ::google::protobuf::int64 tof(int index) const;
  void set_tof(int index, ::google::protobuf::int64 value);
  void add_tof(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      tof() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_tof();

  // optional int32 frameNumber = 4;
  void clear_framenumber();
  static const int kFrameNumberFieldNumber = 4;
  ::google::protobuf::int32 framenumber() const;
  void set_framenumber(::google::protobuf::int32 value);

  // optional int32 totalFrames = 5;
  void clear_totalframes();
  static const int kTotalFramesFieldNumber = 5;
  ::google::protobuf::int32 totalframes() const;
  void set_totalframes(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProtobufEventData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > detid_;
  mutable int _detid_cached_byte_size_;
  ::google::protobuf::int32 count_;
  ::google::protobuf::int32 framenumber_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > tof_;
  mutable int _tof_cached_byte_size_;
  ::google::protobuf::int32 totalframes_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_eventDataProtoBuffer_2eproto();
  friend void protobuf_AssignDesc_eventDataProtoBuffer_2eproto();
  friend void protobuf_ShutdownFile_eventDataProtoBuffer_2eproto();

  void InitAsDefaultInstance();
  static ProtobufEventData* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// ProtobufEventData

// optional int32 count = 1;
inline void ProtobufEventData::clear_count() {
  count_ = 0;
}
inline ::google::protobuf::int32 ProtobufEventData::count() const {
  // @@protoc_insertion_point(field_get:ProtobufEventData.count)
  return count_;
}
inline void ProtobufEventData::set_count(::google::protobuf::int32 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:ProtobufEventData.count)
}

// repeated int32 detId = 2;
inline int ProtobufEventData::detid_size() const {
  return detid_.size();
}
inline void ProtobufEventData::clear_detid() {
  detid_.Clear();
}
inline ::google::protobuf::int32 ProtobufEventData::detid(int index) const {
  // @@protoc_insertion_point(field_get:ProtobufEventData.detId)
  return detid_.Get(index);
}
inline void ProtobufEventData::set_detid(int index, ::google::protobuf::int32 value) {
  detid_.Set(index, value);
  // @@protoc_insertion_point(field_set:ProtobufEventData.detId)
}
inline void ProtobufEventData::add_detid(::google::protobuf::int32 value) {
  detid_.Add(value);
  // @@protoc_insertion_point(field_add:ProtobufEventData.detId)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProtobufEventData::detid() const {
  // @@protoc_insertion_point(field_list:ProtobufEventData.detId)
  return detid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProtobufEventData::mutable_detid() {
  // @@protoc_insertion_point(field_mutable_list:ProtobufEventData.detId)
  return &detid_;
}

// repeated int64 tof = 3;
inline int ProtobufEventData::tof_size() const {
  return tof_.size();
}
inline void ProtobufEventData::clear_tof() {
  tof_.Clear();
}
inline ::google::protobuf::int64 ProtobufEventData::tof(int index) const {
  // @@protoc_insertion_point(field_get:ProtobufEventData.tof)
  return tof_.Get(index);
}
inline void ProtobufEventData::set_tof(int index, ::google::protobuf::int64 value) {
  tof_.Set(index, value);
  // @@protoc_insertion_point(field_set:ProtobufEventData.tof)
}
inline void ProtobufEventData::add_tof(::google::protobuf::int64 value) {
  tof_.Add(value);
  // @@protoc_insertion_point(field_add:ProtobufEventData.tof)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
ProtobufEventData::tof() const {
  // @@protoc_insertion_point(field_list:ProtobufEventData.tof)
  return tof_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
ProtobufEventData::mutable_tof() {
  // @@protoc_insertion_point(field_mutable_list:ProtobufEventData.tof)
  return &tof_;
}

// optional int32 frameNumber = 4;
inline void ProtobufEventData::clear_framenumber() {
  framenumber_ = 0;
}
inline ::google::protobuf::int32 ProtobufEventData::framenumber() const {
  // @@protoc_insertion_point(field_get:ProtobufEventData.frameNumber)
  return framenumber_;
}
inline void ProtobufEventData::set_framenumber(::google::protobuf::int32 value) {
  
  framenumber_ = value;
  // @@protoc_insertion_point(field_set:ProtobufEventData.frameNumber)
}

// optional int32 totalFrames = 5;
inline void ProtobufEventData::clear_totalframes() {
  totalframes_ = 0;
}
inline ::google::protobuf::int32 ProtobufEventData::totalframes() const {
  // @@protoc_insertion_point(field_get:ProtobufEventData.totalFrames)
  return totalframes_;
}
inline void ProtobufEventData::set_totalframes(::google::protobuf::int32 value) {
  
  totalframes_ = value;
  // @@protoc_insertion_point(field_set:ProtobufEventData.totalFrames)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_eventDataProtoBuffer_2eproto__INCLUDED
